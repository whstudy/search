openapi: 3.0.1
info:
  title: Swagger App
  description: The object retrieval API document.
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: shijie.jiao@lenovonetapp.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: '3.0'
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'http://10.128.134.110:80'
  - url: 'https://10.128.134.110'
  - url: /
paths:
  /app/object/page/:
    post:
      tags:
        - terra_search
      summary: 检索对象
      operationId: get_object_list
      requestBody:
        description: 根据各种条件组合检索对象
        content:
          application/json:
            schema:
              type: object
              required:
                - buckets
                - size
                - size_operator
                - name
                - name_match
                - start_time
                - end_time
                - tags
                - tags_match
                - tags_relation
              properties:
                buckets:
                  type: array
                  items:
                    type: string
                  description: 桶名称列表
                  example:
                    - bucket1
                    - bucket2
                size:
                  type: integer
                  description: 对象的大小
                  example: 2000
                size_operator:
                  type: string
                  description: '对象大小的比较符，大于等于-gte,小于等于-lte'
                  example: lte
                name:
                  type: string
                  description: 对象的名称
                  example: obj1
                name_match:
                  type: string
                  description: 对象名称的匹配模式，分词匹配-tokenizer，完全匹配-total，前缀匹配-prefix，后缀匹配-suffix
                  example: tokenizer
                start_time:
                  type: string
                  description: 时间范围-开始时间
                  example: '2023-12-21 10:11:30'
                end_time:
                  type: string
                  description: 时间范围-结束时间
                  example: '2023-12-22 14:00:11'
                tags:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                        description: 标签的键
                        example: City
                      value:
                        type: string
                        description: 标签的值
                        example: Beijing
                  description: 标签键值对
                  example:
                    - key: city
                      value: ShangHai
                    - key: country
                      value: China
                tags_match:
                  type: string
                  description: 标签的匹配模式，，分词匹配-tokenizer，完全匹配-total，前缀匹配-prefix，后缀匹配-suffix
                  example: tokenizer
                tags_relation:
                  type: string
                  description: 标签的关联关系，与-and， 或-or
                  example: and
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        description: 对象的id
                      name:
                        type: string
                        description: 对象的名称
                      bucket:
                        type: string
                        description: 对象所属的桶
                      size:
                        type: integer
                        description: 对象的大小，单位是B
                      owner:
                        type: string
                        description: 对象所属的用户，带租户时，使用$连接租户名
                      create_time:
                        type: string
                        description: 对象的创建时间
                      tags:
                        type: array
                        description: 标签的键值对
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                              description: 标签的键
                              example: City
                            value:
                              type: string
                              description: 标签的值
                              example: Beijing
                      version:
                        type: string
                        description: 对象的版本号
                example:
                  code: '0'
                  data:
                    id: '03122102-84b4-4dad-a5cd-e7ff38041a80.22140943.1:notify.sh:null'
                    name: notify.sh
                    bucket: bucket1
                    size: 7772
                    owner: user1
                    create_time: '2024-04-28 07:09:15'
                    tags:
                      - key: city
                        value: ShangHai
                      - key: country
                        value: China
                    version: 'null'
                  msg: Get object list successfully
      security:
        - Authorization: []
  /app/object/download/:
    get:
      tags:
        - terra_search
      summary: 下载对象
      description: 根据对象的id单个或批量下载对象
      operationId: download_object
      parameters:
        - name: Api-version
          in: header
          description: 请求的API版本
          schema: {}
        - name: Source-type
          in: header
          description: 请求来源
          schema: {}
        - name: Api-lang
          in: header
          description: 语言
          schema: {}
        - name: id
          in: query
          description: 对象的id
          schema: {}
      responses:
        '200':
          description: 成功返回时：是一个二进制的数据流；错误返回时：是code/data/msg的格式
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
      security:
        - Authorization: []
  /app/object/share_link/:
    get:
      tags:
        - terra_search
      summary: 获取分享链接
      description: 根据对象的id和过期时间生成分享链接
      operationId: get_share_link
      parameters:
        - name: Api-version
          in: header
          description: 请求的API版本
          schema: {}
        - name: Source-type
          in: header
          description: 请求来源
          schema: {}
        - name: Api-lang
          in: header
          description: 语言
          schema: {}
        - name: id
          in: query
          description: 对象id
          schema: {}
        - name: duration
          in: query
          description: '链接有效期，单位是s, 范围是60-604800'
          example: 300
          schema: {}
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                    properties:
                      link:
                        type: string
                        description: 对象的访问链接
                        example: 'https://your_bucket_name.s3.amazonaws.com/your_object_key?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE&Expires=1560293352&Signature=WcPzQK3NSp%2BhJb9TjL5ZgY6tDYI%3D'
                example:
                  code: '0'
                  data:
                    link: 'https://your_bucket_name.s3.amazonaws.com/your_object_key?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE&Expires=1560293352&Signature=WcPzQK3NSp%2BhJb9TjL5ZgY6tDYI%3D'
                  msg: Get object share link successfully
      security:
        - Authorization: []
  /app/bucket/list/:
    get:
      tags:
        - terra_search
      summary: 获取桶列表
      description: 查询登录用户拥有的桶列表
      operationId: get_bucket_list
      parameters:
        - name: Api-version
          in: header
          description: 请求的API版本
          schema: {}
        - name: Source-type
          in: header
          description: 请求来源
          schema: {}
        - name: Api-lang
          in: header
          description: 语言
          schema: {}
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                    properties:
                      buckets:
                        type: array
                        items:
                          type: string
                          example: bucket1
                        description: '桶名称列表, 如果带租户，则是"租户名/桶名"的形式'
                example:
                  code: '0'
                  data:
                    buckets:
                      - bucket1
                      - tenant1/bucket2
                  msg: Get bucket list successfully
      security:
        - Authorization: []
  /app/cert/update/:
    post:
      tags:
        - terra_search
      summary: 更新检索应用中存储的magnascale集群证书、域名、端口号
      description: 更新检索应用中存储的magnascale集群证书、域名、端口号
      operationId: update_magnascale_license
      requestBody:
        description: 提供新的证书、域名、端口号
        content:
          application/json:
            schema:
              type: object
              required:
                - cert_name
                - cert_data
                - domain
                - port
              properties:
                cert_name:
                  type: string
                  description: 证书名称
                  example: magnascale_s3_cacert.crt
                cert_data:
                  type: string
                  description: 证书内容
                domain:
                  type: string
                  description: 域名
                  example: magnascale.obj
                port:
                  type: integer
                  description: https端口号
                  example: 8182
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                example:
                  code: '0'
                  data: {}
                  msg: Update cert info successfully
      security:
        - Authorization: []
  /app/cert/info/:
    get:
      tags:
        - terra_search
      summary: 查询检索应用中存储的magnascale集群证书、域名、端口号
      description: 查询检索应用中存储的magnascale集群证书、域名、端口号
      operationId: get_cert_info
      parameters:
        - name: Api-version
          in: header
          description: 请求的API版本
          schema: {}
        - name: Source-type
          in: header
          description: 请求来源
          schema: {}
        - name: Api-lang
          in: header
          description: 语言
          schema: {}
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                    properties:
                      cert_name:
                        type: string
                        example: magnascale_s3_cacert.crt
                        description: 证书名称
                      cert_data:
                        type: string
                        description: 证书内容
                      domain:
                        type: string
                        example: magnascale.obj
                        description: 域名
                      port:
                        type: integer
                        example: 8182
                        description: 端口号
                example:
                  code: '0'
                  data:
                    cert_name: magnascale_s3_cacert.crt
                    cert_data: '-----BEGIN CERTIFICATE-----MIIDOjCCAiKgAwIBAgIUe6ygtXIjUdDTR0mcm/x15wouKW4wDQYJKoZIhvcNAQELBQAwSzELMAkGA1UEBhMCQ04xEDAOBgNVBAgMB2JlaWppbmcxE'
                    domain: magnascale.obj
                    port: 8182
                  msg: Get cert info successfully
      security:
        - Authorization: []
  /app/kibana/address/:
    get:
      tags:
        - terra_search
      summary: 查询kibana的访问地址
      description: 查询kibana的访问地址
      operationId: get_kibana_address
      parameters:
        - name: Api-version
          in: header
          description: 请求的API版本
          schema: {}
        - name: Source-type
          in: header
          description: 请求来源
          schema: {}
        - name: Api-lang
          in: header
          description: 语言
          schema: {}
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                        example: 'http://10.129.31.112:5601'
                        description: kibana访问地址
                example:
                  code: '0'
                  data:
                    address: 'http://10.129.31.112:5601'
                  msg: Get kibana address successfully
      security:
        - Authorization: []
  /app/user/login/:
    post:
      tags:
        - terra_search
      summary: 用户登录
      description: 管理员或普通用户登录
      operationId: user_login
      requestBody:
        description: 管理员提供 身份、用户名、密码登录；普通用户提供身份、access_key、secret_key、用户名登录(管理员登录时，password不是必填项)
        content:
          application/json:
            schema:
              type: object
              required:
                - role
                - username
                - access_key
                - secret_key
              properties:
                role:
                  type: string
                  description: 用户身份， 管理员-administrator，普通用户-user
                  example: user
                username:
                  type: string
                  description: 用户名
                  example: user1
                password:
                  type: string
                  description: 密码，使用base64编码后传递
                  example: xxxxxxxxx
                access_key:
                  type: string
                  description: 用户的access_key
                  example: 3OFY8PMONZ190Y5GMU9N
                secret_key:
                  type: string
                  description: '用户的secret_key,使用base64编码后传递'
                  example: Bu5lJJeCkadPEyOhl86E9MWSV9m1AY6bnsXEBtcw
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                        description: 访问后续接口使用的token
                example:
                  code: '0'
                  data:
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  msg: User login successfully
      security:
        - Authorization: []
  /app/user/logout/:
    post:
      tags:
        - terra_search
      summary: 用户登出
      description: 管理员或普通用户登出
      operationId: user_logout
      requestBody:
        description: 直接发送请求登出
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  description: 用户名
                  example: user1
      responses:
        '200':
          description: 返回值
          headers:
            Api-version:
              description: API响应的版本信息
              schema:
                type: object
            showtype:
              description: 展示类型
              schema:
                type: object
            option:
              description: 动作指令
              schema:
                type: object
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: '0,1,2'
                  msg:
                    type: string
                    description: 成功或失败的描述
                  data:
                    type: object
                example:
                  code: '0'
                  data: {}
                  msg: User logout successfully
      security:
        - Authorization: []
components:
  schemas: {}
  parameters:
    apiVersionInHeader:
      name: Api-version
      in: header
      description: 请求的API版本
      schema:
        type: string
      example: '2.0'
    sourceTypeInHeader:
      name: Source-type
      in: header
      description: 请求来源
      schema:
        type: string
      example: ui
    apiLangInHeader:
      name: Api-lang
      in: header
      description: 语言
      schema:
        type: string
      example: zh-CN
    authorizationInHeader:
      name: authorization
      in: header
      schema:
        type: string
      example: 'Null'
    clusterIdInQuery:
      name: cluster_id
      in: query
      schema:
        type: string
      example: 'Null'
    sortFieldInQuery:
      name: sort_field
      in: query
      description: 排序字段
      schema:
        type: string
      example: name
    sortRuleInQuery:
      name: sort_rule
      in: query
      description: 排序规则
      schema:
        type: string
      example: desc
    filtersInQuery:
      name: filters
      in: query
      description: 用于筛选的关键字
      schema:
        type: string
      example: '{"name": "resource"} 该关键字段优势来源于库表 有时为约定'
    preindexInQuery:
      name: preindex
      in: query
      description: 分页查询后索引
      schema:
        type: integer
      example: 0
    sufindexInQuery:
      name: sufindex
      in: query
      description: 分页查询后索引
      schema:
        type: integer
      example: 0
    fuzzyInQuery:
      name: fuzzy
      in: query
      schema:
        type: string
      example: name
    keywordInQuery:
      name: keyword
      in: query
      schema:
        type: string
      example: default
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
x-original-swagger-version: '2.0'
